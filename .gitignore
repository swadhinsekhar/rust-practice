# Generated by Cargo
# will have compiled files and executables
debug/
target/
**/debug/*
**/target/*

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock
**/Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Compiled Lua sources
luac.out

# luarocks build files
*.src.rock
*.zip
*.tar.gz

# Object files
*.o
*.os
*.ko
*.obj
*.elf

# Precompiled Headers
*.gch
*.pch

# Libraries
*.lib
*.a
*.la
*.lo
*.def
*.exp

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex


java

tags
tags.*
plugin/packer_compiled.lua
lazy-lock.json

*byebug*
cscope.*
filenametags
.DS_Store
obj*
*.o
*.a
*github.com
*go4.org
*golang.org*
*node_modules*
*gopkg.in*
.rb.tags
.js.tags
.lock-waf*
.waf*
build
.*.sw*
*~
GPATH
GRTAGS
GTAGS
GSYMS
TAGS
ID
*.pyc
pdebug.*
*.tar.gz
*.patch

log.html
report.html
output.xml
robot.iml
# pyenv version file
*.python-version
# rbenv version file
*.ruby-version

compile_flags.txt
test/

tags
tags.*
